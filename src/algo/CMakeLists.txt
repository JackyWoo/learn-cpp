# base
add_executable(quickSort base/quickSort.cpp)
add_executable(heapSort base/heapSort.cpp)
add_executable(hasCycle base/hasCycle.cpp)
add_executable(hasCycle2 base/hasCycle2.cpp)
add_executable(getIntersectionNode base/getIntersectionNode.cpp)
add_executable(reverseKGroup base/reverseKGroup.cpp)
add_executable(isPalindrome base/isPalindrome.cpp)
add_executable(twoSum base/twoSum.cpp)
add_executable(twoSum2 base/twoSum2.cpp)
add_executable(threeSum base/threeSum.cpp)
add_executable(lengthOfLongestSubstring base/lengthOfLongestSubstring.cpp)
add_executable(findAnagrams base/findAnagrams.cpp)
add_executable(search base/search.cpp)
add_executable(searchRange base/searchRange.cpp)

add_executable(mergeOrderedList base/mergeOrderedList.cpp)

# back track
add_executable(nQueue backtrack/nQueue.cpp)
add_executable(generateParenthesis backtrack/generateParenthesis.cpp)
add_executable(combine backtrack/combine.cpp)
add_executable(combinationSum3 backtrack/combinationSum3.cpp)

# dynamic plan
add_executable(fib dp/fib.cpp)
add_executable(longestPalindrome dp/longestPalindrome.cpp)
add_executable(coinChange dp/coinChange.cpp)
add_executable(coinChange2 dp/coinChange2.cpp)
add_executable(lengthOfLIS dp/lengthOfLIS.cpp)
add_executable(minFallingPathSum dp/minFallingPathSum.cpp)
add_executable(wordBreak dp/wordBreak.cpp)
add_executable(minDistance dp/minDistance.cpp)
add_executable(canPartition dp/canPartition.cpp)
add_executable(knapsack dp/knapsack.cpp)
add_executable(minPathSum dp/minPathSum.cpp)
add_executable(findCheapestPrice dp/findCheapestPrice.cpp)
add_executable(maxProfit dp/maxProfit.cpp)
add_executable(maxProfit2 dp/maxProfit2.cpp)
add_executable(predictTheWinner dp/predictTheWinner.cpp)
add_executable(rob dp/rob.cpp)
add_executable(rob2 dp/rob2.cpp)
add_executable(climbStairs dp/climbStairs.cpp)
add_executable(minCostClimbingStairs dp/minCostClimbingStairs.cpp)

# greedy
add_executable(findPeaks greedy/findPeaks.cpp)
add_executable(maxArea greedy/maxArea.cpp)

